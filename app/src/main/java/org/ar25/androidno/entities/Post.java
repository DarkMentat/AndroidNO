package org.ar25.androidno.entities;


import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteColumn;
import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteType;

import org.ar25.androidno.util.Optional;

import static org.ar25.androidno.db.DbOpenHelper.DB_POSTS_HEADER;
import static org.ar25.androidno.db.DbOpenHelper.DB_POSTS_ID;
import static org.ar25.androidno.db.DbOpenHelper.DB_POSTS_IMAGE_URL;
import static org.ar25.androidno.db.DbOpenHelper.DB_POSTS_PUBLISH_DATE;
import static org.ar25.androidno.db.DbOpenHelper.DB_POSTS_TABLE;
import static org.ar25.androidno.db.DbOpenHelper.DB_POSTS_TEASER;
import static org.ar25.androidno.db.DbOpenHelper.DB_POSTS_TEXT;

@StorIOSQLiteType(table = DB_POSTS_TABLE)
public class Post {

  public static Post newPost(Long id, String header, String publishDate, String imageUrl, String teaser, String text) {
    return new Post(id, header, publishDate, imageUrl, teaser, text);
  }
  public static Post newPost(Long id, String header, String publishDate, String imageUrl, String teaser) {
    return new Post(id, header,  publishDate, imageUrl, teaser, null);
  }


  @StorIOSQLiteColumn(name = DB_POSTS_ID, key = true)
  Long mId;

  @StorIOSQLiteColumn(name = DB_POSTS_HEADER)
  String mHeader;

  @StorIOSQLiteColumn(name = DB_POSTS_PUBLISH_DATE)
  String mPublishDate;

  @StorIOSQLiteColumn(name = DB_POSTS_IMAGE_URL)
  String mImageUrl;

  @StorIOSQLiteColumn(name = DB_POSTS_TEASER)
  String mTeaser;

  @StorIOSQLiteColumn(name = DB_POSTS_TEXT)
  String mText;


  Post() { } // leave default constructor for AutoGenerated code
  private Post(Long id, String header, String publishDate, String imageUrl, String teaser, String text) {
    mId = id;
    mHeader = header;
    mPublishDate = publishDate;
    mImageUrl = imageUrl;
    mTeaser = teaser;
    mText = text;
  }


  public Long getId() {
    return mId;
  }
  public String getHeader() {
    return mHeader;
  }
  public String getPublishDate() {
    return mPublishDate;
  }
  public String getImageUrl() {
    return mImageUrl;
  }
  public String getTeaser() {
    return mTeaser;
  }
  public Optional<String> getText() {
    return Optional.ofNullable(mText);
  }


  @Override public boolean equals(Object o) {
    if(this == o) return true;
    if(o == null || getClass() != o.getClass()) return false;

    Post post = (Post) o;

    if(!mId.equals(post.mId)) return false;
    if(!mHeader.equals(post.mHeader)) return false;
    if(!mPublishDate.equals(post.mPublishDate)) return false;
    if(!mImageUrl.equals(post.mImageUrl)) return false;
    if(!mTeaser.equals(post.mTeaser)) return false;
    return mText != null ? mText.equals(post.mText) : post.mText == null;

  }
  @Override public int hashCode() {
    int result = mId.hashCode();
    result = 31 * result + mHeader.hashCode();
    result = 31 * result + mPublishDate.hashCode();
    result = 31 * result + mImageUrl.hashCode();
    result = 31 * result + mTeaser.hashCode();
    result = 31 * result + (mText != null ? mText.hashCode() : 0);
    return result;
  }

  @Override public String toString() {
    return "Post{" +
        "mId=" + mId +
        ", mHeader='" + mHeader + '\'' +
        ", mPublishDate='" + mPublishDate + '\'' +
        ", mImageUrl='" + mImageUrl + '\'' +
        ", mTeaser='" + mTeaser + '\'' +
        ", mText='" + mText + '\'' +
        "}\n";
  }
}